{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "S3Bucket": {
      "Type": "String",
      "Default":"codedeploy.gouthamreddy.me"


    },
    "DomainName": {
      "Type": "String",
      "Default":"dev.gouthamreddy.me"
    }
  },
  "Resources": {
    "CircleCIUploadToS3":{
      "Type":"AWS::IAM::ManagedPolicy",
      "Properties":{
        "ManagedPolicyName":"CircleCI-Upload-To-S3",
        "PolicyDocument":{
          "Version":"2012-10-17",
          "Statement":[
            {
              "Effect":"Allow",
              "Action":[
                "s3:PutObject",
                "s3:ListBucket",
                "s3:Get*"
              ],
              "Resource":[
                {
                  "Fn::Join":[
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref":"S3Bucket"

                      },
                      "/*"

                    ]

                  ]

                },
                {
                  "Fn::Join":[
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref":"S3Bucket"

                      }

                    ]

                  ]

                }

              ]

            }

          ]

        },
        "Users":[
          "circleci"

        ]

      }

    },
    "CircleCIUpdateLambda": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "lambda:UpdateFunctionCode"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:lambda:us-east-1:",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":function:EmailLambda"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        "PolicyName": "Circle-CI-Update-Lambda-Function",
        "Users": [
          "circleci"
        ]
      }
    },
    "EmailLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "EmailLambda",
        "Handler": "EmailLambda::handleRequest",
        "Role": {
          "Fn::GetAtt": [
            "EmailLambdaRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": {
            "Ref": "S3Bucket"
          },
          "S3Key": "EmailLambda.jar"
        },
        "Environment": {
          "Variables": {
            "DynamoDBEndPoint": "dynamodb.us-east-1.amazonaws.com",
            "ttlInMin": "15",
            "domain": {
              "Ref": "DomainName"
            }
          }
        },
        "Runtime": "java11",
        "ReservedConcurrentExecutions": 5,
        "MemorySize": 256,
        "Timeout": "900"
      }
    },
    "EmailLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "EmailLambdaRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "EmailLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "EmailLambda"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "BillDue"
        }
      }
    },
    "LambdaDynamoDBSesAccessPolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": "lambda-dynamoDB-ses-accessPolicy",
        "Description": "Policy for lambda to access dynamoDB and ec2",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:GetItem",
                "dynamodb:Query"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:dynamodb:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "TableName"
                      }
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "ses:SendEmail",
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        }
      }
    },
    "BillDue": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Subscription": [
          {
            "Endpoint": {
              "Fn::GetAtt": [
                "EmailLambda",
                "Arn"
              ]
            },
            "Protocol": "lambda"
          }
        ],
        "TopicName": "bill_due_topic"
      }
    },
    "SNStopicpolicy": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:Publish",
                "SNS:DeleteTopic",
                "SNS:ListSubscriptionsByTopic",
                "SNS:GetTopicAttributes",
                "SNS:Receive",
                "SNS:AddPermission",
                "SNS:Subscribe"
              ],
              "Resource": {
                "Ref": "BillDue"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": {
                    "Ref": "AWS::AccountId"
                  }
                }
              }
            }
          ]
        },
        "Topics": [
          {
            "Ref": "BillDue"
          }
        ]
      }
    },
    "DynamoDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "email",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "email",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TimeToLiveSpecification": {
          "AttributeName": "ttlInMin",
          "Enabled": true
        },
        "TableName": "csye6225"
      }
    },
    "SnsEc2Policy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": "sns-ec2-policy",
        "Description": "Policy for ec2 to access sns",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sns:Publish",
                "sns:CreateTopic"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:sns:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":bill_due_topic"
                  ]
                ]
              }
            }
          ]
        }
      }
    }
  }
}

